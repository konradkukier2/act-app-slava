{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","WIDGET_EVENTS","V1_REQUEST_CONTEXT","V1_REQUEST_CONTEXT_SUCCESS","V1_REQUEST_CONTEXT_ERROR","V1_SEARCH_ACTIVITY","V1_REQUEST_CURRENT_ACTIVITY","V1_REQUEST_CURRENT_ACTIVITY_SUCCESS","V1_REQUEST_CURRENT_ACTIVITY_ERROR","HOST_APP_URL_WHITELIST","AppComponent","activityId","messageReceiver","event","includes","origin","data","JSON","parse","type","console","log","init","unregisterListener","registerListener","requestContext","requestCurrentActivity","window","addEventListener","removeEventListener","payload","parent","postMessage","stringify","sendActivity","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnDestroy } from '@angular/core';\n\nconst WIDGET_EVENTS = {\n  V1_REQUEST_CONTEXT: 'V1_REQUEST_CONTEXT',\n  V1_REQUEST_CONTEXT_SUCCESS: 'V1_REQUEST_CONTEXT_SUCCESS',\n  V1_REQUEST_CONTEXT_ERROR: 'V1_REQUEST_CONTEXT_ERROR',\n  V1_SEARCH_ACTIVITY: 'V1_SEARCH_ACTIVITY',\n  V1_REQUEST_CURRENT_ACTIVITY: 'V1_REQUEST_CURRENT_ACTIVITY',\n  V1_REQUEST_CURRENT_ACTIVITY_SUCCESS: 'V1_REQUEST_CURRENT_ACTIVITY_SUCCESS',\n  V1_REQUEST_CURRENT_ACTIVITY_ERROR: 'V1_REQUEST_CURRENT_ACTIVITY_ERROR',\n};\n\nconst HOST_APP_URL_WHITELIST = [\n  'http://localhost:3000',\n  'http://localhost:3001',\n  'https://qt.coresystems.net',\n  'https://et.coresystems.net',\n  'https://sb.coresystems.net',\n  'https://dt.coresystems.net',\n  'https://eu.coresystems.net',\n  'https://de.coresystems.net',\n  'https://us.coresystems.net',\n  'https://cn.coresystems.net',\n  'https://au.coresystems.net',\n];\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnDestroy {\n  public activityId: string = '';\n\n  constructor() {\n    console.log('[ACT APP] initializing...');\n  }\n\n  public ngAfterViewInit() {\n    this.init();\n  }\n\n  public ngOnDestroy() {\n    this.unregisterListener();\n  }\n\n  private init() {\n    this.registerListener();\n    this.requestContext();\n    this.requestCurrentActivity();\n  }\n\n  private registerListener() {\n    window.addEventListener('message', this.messageReceiver, false);\n  }\n\n  private unregisterListener() {\n    window.removeEventListener('message', this.messageReceiver, false);\n  }\n\n  private messageReceiver = (event: MessageEvent) => {\n    if (HOST_APP_URL_WHITELIST.includes(event.origin)) {\n      const data = JSON.parse(event.data);\n      if (data.type === WIDGET_EVENTS.V1_REQUEST_CONTEXT_SUCCESS) {\n        console.log('[ACT APP] received context!', JSON.parse(event.data));\n      }\n      if (data.type === WIDGET_EVENTS.V1_REQUEST_CONTEXT_ERROR) {\n        console.log('[ACT APP] received context ERROR!', JSON.parse(event.data));\n      }\n      if (data.type === WIDGET_EVENTS.V1_REQUEST_CURRENT_ACTIVITY_SUCCESS) {\n        console.log('[ACT APP] received current activity!', JSON.parse(event.data));\n      }\n      if (data.type === WIDGET_EVENTS.V1_REQUEST_CURRENT_ACTIVITY_ERROR) {\n        console.log('[ACT APP] received current activity ERROR!', JSON.parse(event.data));\n      }\n    }\n  };\n\n  public sendActivity() {\n    console.log(`[ACT APP] sending clicked activity data: ${this.activityId}`);\n    const event = { type: WIDGET_EVENTS.V1_SEARCH_ACTIVITY, payload: { id: this.activityId } };\n    window.parent.postMessage(JSON.stringify(event), '*');\n  }\n\n  public requestContext() {\n    console.log('[ACT APP] requesting context from host application');\n    const event = { type: WIDGET_EVENTS.V1_REQUEST_CONTEXT };\n    window.parent.postMessage(JSON.stringify(event), '*');\n  }\n\n  public requestCurrentActivity() {\n    console.log('[ACT APP] requesting current activity from host application');\n    const event = { type: WIDGET_EVENTS.V1_REQUEST_CURRENT_ACTIVITY };\n    window.parent.postMessage(JSON.stringify(event), '*');\n  }\n\n}\n","<div class=\"app-container\">\n\n  <div class=\"activity-container\">\n    <input type=\"text\" placeholder=\"Activity ID\" [(ngModel)]=\"activityId\" #ctrl=\"ngModel\" />\n    <button (click)=\"sendActivity()\">Send Activity ID</button>\n  </div>\n\n  <div class=\"request-context-container\">\n    <button (click)=\"requestContext()\">Request Context</button>\n  </div>\n\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}